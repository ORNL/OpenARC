#! /bin/bash
if [ $# -eq 1 ]; then
	inputData1=$1
else
	#default values for matrix_dim = 64
	inputData1=4096
	#value for matrix_dim = 256 #
	#inputData1 = 65536
	#value for matrix_dim = 512 #
	#inputData1 = 262144
	#value for matrix_dim = 2048 #
	#inputData1 = 4194304
fi

verLevel=0

if [ "${OPENARC_INSTALL_ROOT}" = "" ]; then
    OPENARC_INSTALL_ROOT=${openarc}/install
fi
if [ ! -f "${OPENARC_INSTALL_ROOT}/make.header" ]; then
    echo "====> Cannot find OpenARC install directory; set environment variable, OPENARC_INSTALL_ROOT properly!"
    exit
fi

openarcinc="${OPENARC_INSTALL_ROOT}/include"
openarclib="${OPENARC_INSTALL_ROOT}/lib"
openarcbin="${OPENARC_INSTALL_ROOT}/bin"

if [ ! -f "openarcConf.txt" ]; then
    cp "openarcConf_NORMAL.txt" "openarcConf.txt"
fi

if [ "$inputData1" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__inputData1__|${inputData1}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi

if [ "$openarcinc" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__openarcrt__|${openarcinc}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi

java -classpath $openarclib/cetus.jar:$openarclib/antlr.jar openacc.exec.ACC2GPUDriver -verbosity=${verLevel} -gpuConfFile=openarcConf.txt *.c

echo ""
echo "====> Input Data: _M_SIZE = ${inputData1}"
echo ""
echo "====> To compile the translated output file:"
#echo "\$ make _M_SIZE=${inputData1}"
echo "\$ make"
echo ""
echo "====> To run the compiled binary:"
if [ "$rodinia" = "" ]; then
	rodinia="[path-to-rodinia-benchmark]"
fi
if [ $inputData1 -eq 4096 ]; then
	echo "\$ cd bin; lud_ACC -v -i $rodinia/data/lud/64.dat"
elif [ $inputData1 -eq 65536 ]; then
	echo "\$ cd bin; lud_ACC -v -i $rodinia/data/lud/256.dat"
elif [ $inputData1 -eq 262144 ]; then
	echo "\$ cd bin; lud_ACC -v -i $rodinia/data/lud/512.dat"
elif [ $inputData1 -eq 4194304 ]; then
	echo "\$ cd bin; lud_ACC -v -i $rodinia/data/lud/2048.dat"
else
	echo "\$ cd bin; lud_ACC -v -i [rodinia-lud-input-file]"
fi
echo ""
